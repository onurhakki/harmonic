

const selectedGroup = document.getElementById("selectGroup");
const selectedComponent = document.getElementById("selectComponent");
const selectedFrame = document.getElementById("selectDataframe");
const n = document.getElementById("selectn");

const colors = ['rgb(104, 112, 3)', 'rgb(159, 196, 9)', 'rgb(189, 224, 83)', 'rgb(165, 216, 78)', 'rgb(99, 163, 3)', 'rgb(160, 216, 95)', 'rgb(136, 204, 73)', 'rgb(106, 191, 32)', 'rgb(137, 252, 42)', 'rgb(127, 255, 22)', 'rgb(132, 239, 74)', 'rgb(122, 232, 85)', 'rgb(91, 196, 62)', 'rgb(87, 252, 50)', 'rgb(46, 160, 24)', 'rgb(82, 224, 60)', 'rgb(67, 234, 49)', 'rgb(114, 244, 105)', 'rgb(73, 234, 68)', 'rgb(34, 193, 34)', 'rgb(62, 209, 67)', 'rgb(74, 214, 79)', 'rgb(44, 183, 58)', 'rgb(3, 170, 28)', 'rgb(13, 226, 45)', 'rgb(87, 242, 113)', 'rgb(49, 198, 79)', 'rgb(26, 168, 57)', 'rgb(43, 255, 92)', 'rgb(75, 244, 143)', 'rgb(44, 224, 119)', 'rgb(17, 224, 121)', 'rgb(50, 193, 122)', 'rgb(7, 255, 147)', 'rgb(43, 175, 118)', 'rgb(54, 201, 152)', 'rgb(95, 244, 219)', 'rgb(100, 239, 218)', 'rgb(73, 216, 197)', 'rgb(66, 209, 194)']
var dataframe = [[[[100.0, 0.0, 67.2, 0.0, 45.2, 0.0, 33.7, 0.0, 27.5, 0.0, 18.7, 0.0, 14.2, 0.0, 12.3, 0.0, 12.3, 0.0, 11.2, 0.0, 10.2, 0.0, 8.8, 0.0, 0.0, 0.0, 7.2, 0.0, 6.9, 0.0, 6.6, 0.0, 6.3, 0.0, 6.0, 0.0, 5.4, 0.0, 5.0, 0.0], [100.0, 0.0, 44.4, 0.0, 19.4, 0.0, 15.1, 0.0, 8.7, 0.0, 9.8, 0.0, 6.8, 0.0, 6.1, 0.0, 5.4, 0.0, 5.0, 0.0, 4.3, 0.0, 3.9, 0.0, 0.0, 0.0, 3.3, 0.0, 3.1, 0.0, 2.8, 0.0, 2.8, 0.0, 2.4, 0.0, 2.4, 0.0, 2.3, 0.0], [100.0, 0.0, 92.1, 0.0, 81.9, 0.0, 69.8, 0.0, 56.9, 0.0, 46.2, 0.0, 41.9, 0.0, 41.6, 0.0, 43.0, 0.0, 43.3, 0.0, 41.5, 0.0, 39.0, 0.0, 0.0, 0.0, 34.6, 0.0, 34.0, 0.0, 33.8, 0.0, 33.1, 0.0, 31.7, 0.0, 29.7, 0.0, 27.8, 0.0], [100.0, 0.0, 40.5, 0.0, 38.4, 0.0, 40.8, 0.0, 28.6, 0.0, 34.9, 0.0, 29.9, 0.0, 30.1, 0.0, 27.6, 0.0, 28.5, 0.0, 26.8, 0.0, 25.2, 0.0, 0.0, 0.0, 23.7, 0.0, 23.0, 0.0, 21.3, 0.0, 21.5, 0.0, 19.8, 0.0, 19.5, 0.0, 2.6, 0.0]], [[100.0, 0.0, 0.3, 0.0, 1.4, 0.0, 1.3, 0.0, 0.2, 0.0, 0.7, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [100.0, 0.0, 0.2, 0.0, 1.4, 0.0, 1.1, 0.0, 0.8, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [100.0, 0.0, 13.4, 0.0, 7.0, 0.0, 1.7, 0.0, 2.2, 0.0, 1.5, 0.0, 1.0, 0.0, 0.2, 0.0, 0.7, 0.0, 1.1, 0.0, 1.1, 0.0, 0.8, 0.0, 0.0, 0.0, 0.4, 0.0, 0.7, 0.0, 0.6, 0.0, 0.4, 0.0, 0.1, 0.0, 0.1, 0.0, 0.2, 0.0], [100.0, 0.0, 4.8, 0.0, 3.7, 0.0, 1.8, 0.0, 3.3, 0.0, 3.8, 0.0, 2.1, 0.0, 0.9, 0.0, 0.7, 0.0, 0.5, 0.0, 0.2, 0.0, 0.3, 0.0, 0.0, 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.0, 0.1, 0.0]]],
                 [[[0, 0.0,0, 0.0, 5.2, 0.0, 3.7, 0.0, 25, 0.0, 17, 0.0, 142, 0.0, 123, 0.0, 12.3, 0.0, 11.2, 0.0, 10.2, 0.0, 8.8, 0.0, 0.0, 0.0, 7.2, 0.0, 6.9, 0.0, 6.6, 0.0, 6.3, 0.0, 6.0, 0.0, 5.4, 0.0, 5.0, 0.0], [100.0, 0.0, 44.4, 0.0, 19.4, 0.0, 15.1, 0.0, 8.7, 0.0, 9.8, 0.0, 6.8, 0.0, 6.1, 0.0, 5.4, 0.0, 5.0, 0.0, 4.3, 0.0, 3.9, 0.0, 0.0, 0.0, 3.3, 0.0, 3.1, 0.0, 2.8, 0.0, 2.8, 0.0, 2.4, 0.0, 2.4, 0.0, 2.3, 0.0], [100.0, 0.0, 92.1, 0.0, 81.9, 0.0, 69.8, 0.0, 56.9, 0.0, 46.2, 0.0, 41.9, 0.0, 41.6, 0.0, 43.0, 0.0, 43.3, 0.0, 41.5, 0.0, 39.0, 0.0, 0.0, 0.0, 34.6, 0.0, 34.0, 0.0, 33.8, 0.0, 33.1, 0.0, 31.7, 0.0, 29.7, 0.0, 27.8, 0.0], [100.0, 0.0, 40.5, 0.0, 38.4, 0.0, 40.8, 0.0, 28.6, 0.0, 34.9, 0.0, 29.9, 0.0, 30.1, 0.0, 27.6, 0.0, 28.5, 0.0, 26.8, 0.0, 25.2, 0.0, 0.0, 0.0, 23.7, 0.0, 23.0, 0.0, 21.3, 0.0, 21.5, 0.0, 19.8, 0.0, 19.5, 0.0, 2.6, 0.0]], [[100.0, 0.0, 0.3, 0.0, 1.4, 0.0, 1.3, 0.0, 0.2, 0.0, 0.7, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [100.0, 0.0, 0.2, 0.0, 1.4, 0.0, 1.1, 0.0, 0.8, 0.0, 0.1, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [100.0, 0.0, 13.4, 0.0, 7.0, 0.0, 1.7, 0.0, 2.2, 0.0, 1.5, 0.0, 1.0, 0.0, 0.2, 0.0, 0.7, 0.0, 1.1, 0.0, 1.1, 0.0, 0.8, 0.0, 0.0, 0.0, 0.4, 0.0, 0.7, 0.0, 0.6, 0.0, 0.4, 0.0, 0.1, 0.0, 0.1, 0.0, 0.2, 0.0], [100.0, 0.0, 4.8, 0.0, 3.7, 0.0, 1.8, 0.0, 3.3, 0.0, 3.8, 0.0, 2.1, 0.0, 0.9, 0.0, 0.7, 0.0, 0.5, 0.0, 0.2, 0.0, 0.3, 0.0, 0.0, 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.0, 0.1, 0.0]]]]

var xValues = [];
var yValues = [];

generateData();

var myChart = new Chart("myChart", {
    type: "line",
    data: {
        labels: xValues,
        datasets: yValues},
    options:{
        scales:{
            xAxes: [{
                ticks: {
                  min: 0,
                  max: 10,
                  stepSize: .5
                }
              }],
        
        }

    }
    });

function generateData(i1=0, i2=0.04, step = 0.0003) {
    for (let i = i1; i<= i2; i += step){
            i = Number(i.toFixed(4));
            xValues.push(i)
        }
    for (let t = 1; t <= n.value ; t += 1) {
        k = [];
        if (dataframe[selectedGroup.value][selectedComponent.value][selectedFrame.value][t-1] != 0)
        {
        for (let i = 0; i<= xValues.length; i += 1){
            k.push(dataframe[selectedGroup.value][selectedComponent.value][selectedFrame.value][t-1] * Math.sin(2*Math.PI*50*t*xValues[i]))
        }
        yValues.push(
            {
                fill: false,
                pointRadius: 1,
                borderColor: colors[t],
                data:k,
                label:t
            }
        );
        }
    }

    yValues = [{
        fill: false,
        pointRadius: 1,
        data: sumArrays(yValues),
        borderColor: "rgb(0,0,0)",

        label: "Sum of harmonics"
    }].concat(yValues)

}

function plottingGraph(){
    myChart = new Chart("myChart", {
        type: "line",
        data: {
            labels: xValues,
            datasets: yValues}});
}


n.addEventListener("change", updateGraph);
selectedFrame.addEventListener("change", updateGraph);
selectedGroup.addEventListener("change", updateGraph);
selectedComponent.addEventListener("change", updateGraph);

function updateGraph(){
    xValues = [];
    yValues = [];
    generateData()
    myChart.destroy()
    plottingGraph()
}

function sumArrays(givenArrays){
    legnthof = givenArrays[1].data.length;
    var total = new Array(legnthof).fill(0);
    for (let nth = 0 ; nth< givenArrays.length; nth++)
    {
        for (let j = 0; j < total.length; j++)
        {
            if (typeof givenArrays[nth].data[j] == 'number')
            {
                total[j] += givenArrays[nth].data[j];
            }
            
        }
    }
    return total
  }
  




